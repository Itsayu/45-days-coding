class Solution {
public:
    vector<int> vowelStrings(vector<string>& words, vector<vector<int>>& queries) {
        vector<bool> isVowel(26,false);
        for(const char v:{'a','e','i','o','u'}) isVowel[v-'a']=true;
        
        int len = words.size(), qlen=queries.size();
        vector<int> psum(len,0);
        if (isVowel[words[0][0]-'a'] && isVowel[words[0].back()-'a']) psum[0] = 1;
        
        for(int i = 1; i<len; i++){
            if (isVowel[words[i][0]-'a'] && isVowel[words[i].back()-'a']) psum[i] = psum[i-1]+1;
            else psum[i] = psum[i-1];
        }

        vector<int> res(qlen);
        for(int i=0; i<qlen; i++){
            int l=queries[i][0], r=queries[i][1];
            res[i] = (l>0)? psum[r]-psum[l-1] : psum[r];
        }
        return res;
    }
};
