 // --------------------o(n) second solution------------------------
    
    public:
    pair<int, int> diameterFun(Node* root){
        if(root == NULL){
            pair<int, int> akt = make_pair(0,0);
            return akt;
        }
        pair<int, int> left = diameterFun(root -> left);
        pair<int, int> right = diameterFun(root -> right);
        
        int option1 = left.first;
        int option2 = right.first;
        int option3 = left.second + right.second + 1;
        
        pair<int,int> nr;
        nr.first = max(option1, max(option2, option3));
        nr.second = max(left.second, right.second) + 1;
        
        return nr;
    }
    
    int diameter(Node* root){
        return diameterFun(root).first;
    }
